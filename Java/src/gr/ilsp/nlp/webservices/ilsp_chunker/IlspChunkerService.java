
package gr.ilsp.nlp.webservices.ilsp_chunker;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "ilsp_chunkerService", targetNamespace = "http://soaplab.org/ilsp/ilsp_chunker", wsdlLocation = "http://nlp.ilsp.gr/soaplab2-axis/typed/services/ilsp.ilsp_chunker?wsdl")
public class IlspChunkerService
        extends Service {

    private final static URL ILSPCHUNKERSERVICE_WSDL_LOCATION;
    private final static WebServiceException ILSPCHUNKERSERVICE_EXCEPTION;
    private final static QName ILSPCHUNKERSERVICE_QNAME = new QName("http://soaplab.org/ilsp/ilsp_chunker", "ilsp_chunkerService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://nlp.ilsp.gr/soaplab2-axis/typed/services/ilsp.ilsp_chunker?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ILSPCHUNKERSERVICE_WSDL_LOCATION = url;
        ILSPCHUNKERSERVICE_EXCEPTION = e;
    }

    public IlspChunkerService() {
        super(__getWsdlLocation(), ILSPCHUNKERSERVICE_QNAME);
    }

    public IlspChunkerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ILSPCHUNKERSERVICE_QNAME, features);
    }

    public IlspChunkerService(URL wsdlLocation) {
        super(wsdlLocation, ILSPCHUNKERSERVICE_QNAME);
    }

    public IlspChunkerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ILSPCHUNKERSERVICE_QNAME, features);
    }

    public IlspChunkerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IlspChunkerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (ILSPCHUNKERSERVICE_EXCEPTION != null) {
            throw ILSPCHUNKERSERVICE_EXCEPTION;
        }
        return ILSPCHUNKERSERVICE_WSDL_LOCATION;
    }

    /**
     * Chunker for Greek texts. Input by default is an XCES document with with POS-tagged tokens. Output is a standoff document with chunk annotations.
     *
     * @return returns IlspChunker
     */
    @WebEndpoint(name = "ilsp_chunkerPort")
    public IlspChunker getIlspChunkerPort() {
        return super.getPort(new QName("http://soaplab.org/ilsp/ilsp_chunker", "ilsp_chunkerPort"), IlspChunker.class);
    }

    /**
     * Chunker for Greek texts. Input by default is an XCES document with with POS-tagged tokens. Output is a standoff document with chunk annotations.
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IlspChunker
     */
    @WebEndpoint(name = "ilsp_chunkerPort")
    public IlspChunker getIlspChunkerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soaplab.org/ilsp/ilsp_chunker", "ilsp_chunkerPort"), IlspChunker.class, features);
    }

}
