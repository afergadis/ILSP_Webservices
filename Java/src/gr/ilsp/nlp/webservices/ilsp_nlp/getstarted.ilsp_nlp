<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.7-b01-. --><definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:embossilsp_nlp="http://soaplab.org/ilsp_nlp" xmlns:tns="http://soaplab.org/getstarted/ilsp_nlp" xmlns:soaplab="http://soaplab.org/typedws" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" targetNamespace="http://soaplab.org/getstarted/ilsp_nlp" name="ilsp_nlpService">
	<types>
		<xsd:schema>
			<xsd:import namespace="http://soaplab.org/ilsp_nlp" schemaLocation="http://nlp.ilsp.gr:80/soaplab2-axis/typed/services/getstarted.ilsp_nlp?xsd=1" />
			<xsd:import namespace="http://soaplab.org/typedws" schemaLocation="http://nlp.ilsp.gr:80/soaplab2-axis/typed/services/getstarted.ilsp_nlp?xsd=2" />
		</xsd:schema>
    </types>
	<message name="run">
		<part name="parameters" element="embossilsp_nlp:run" />
	</message>
	    <message name="runResponse">
        <part name="parameters" element="soaplab:runResponse" />
    </message>
    <message name="runAndWaitFor">
        <part name="parameters" element="embossilsp_nlp:runAndWaitFor" />
    </message>
    <message name="runAndWaitForResponse">
        <part name="parameters" element="embossilsp_nlp:runAndWaitForResponse" />
    </message>
    <message name="getStatus">
        <part name="parameters" element="soaplab:getStatus" />
    </message>
    <message name="getStatusResponse">
        <part name="parameters" element="soaplab:getStatusResponse" />
    </message>
    <message name="getResults">
        <part name="parameters" element="soaplab:getResults" />
    </message>
    <message name="getResultsResponse">
        <part name="parameters" element="embossilsp_nlp:getResultsResponse" />
    </message>
    <message name="getSomeResults">
        <part name="parameters" element="soaplab:getSomeResults" />
    </message>
    <message name="getSomeResultsResponse">
        <part name="parameters" element="embossilsp_nlp:getSomeResultsResponse" />
    </message>
    <message name="getResultsInfoResponse">
        <part name="parameters" element="soaplab:getResultsInfoResponse" />
    </message>
	
    <message name="terminateRequest">
    	<part name="parameters" element="soaplab:terminate" />
    </message>
    
    <message name="clearRequest">
        <part name="parameters" element="soaplab:clear" />
    </message>
    
    <message name="waitforRequest">
        <part name="parameters" element="soaplab:waitfor" />
    </message>

    <message name="describeRequest">
        <part name="parameters" element="soaplab:describe" />
    </message>
    <message name="describeResponse">
        <part name="parameters" element="soaplab:describeResponse" />
    </message>

    <message name="getLastEventRequest">
        <part name="parameters" element="soaplab:getLastEvent" />
    </message>
    <message name="getLastEventResponse">
        <part name="parameters" element="soaplab:getLastEventResponse" />
    </message>

    <message name="getResultsInfo">
        <part name="parameters" element="soaplab:getResultsInfo" />
    </message>

    <portType name="ilsp_nlp">
		<operation name="run">
			<documentation>starts a job and returns its job identifier</documentation>
			<input message="tns:run" />
			<output message="tns:runResponse" />
		</operation>
		<operation name="runAndWaitFor">
			<documentation>starts a job, waits until it is completed and
				returns the job results</documentation>
			<input message="tns:runAndWaitFor" />
			<output message="tns:runAndWaitForResponse" />
		</operation>
		<operation name="getStatus">
			<documentation>returns status of a given job</documentation>
			<input message="tns:getStatus" />
			<output message="tns:getStatusResponse" />
		</operation>
		<operation name="getResults">
			<documentation>returns all results of a given job</documentation>
			<input message="tns:getResults" />
			<output message="tns:getResultsResponse" />
		</operation>
		<operation name="getSomeResults">
			<documentation>returns all results of a given job</documentation>
			<input message="tns:getSomeResults" />
			<output message="tns:getSomeResultsResponse" />
		</operation>
		<operation name="terminate">
		    <documentation>terminates the specified job</documentation>
			<input message="tns:terminateRequest" />
        </operation>
        <operation name="clear">
            <documentation>informs server that resources for the specified job can be cleared</documentation>
            <input message="tns:clearRequest" />
        </operation>
        <operation name="waitfor">
            <documentation>waits until the specified job terminates</documentation>
            <input message="tns:waitforRequest" />
        </operation>
        <operation name="describe">
            <documentation>returns a structured description of the service, in xml</documentation>
            <input message="tns:describeRequest" />
            <output message="tns:describeResponse" />
        </operation>
        <operation name="getLastEvent">
            <input message="tns:getLastEventRequest" />
            <output message="tns:getLastEventResponse" />
        </operation>
        <operation name="getResultsInfo">
            <input message="tns:getResultsInfo" />
            <output message="tns:getResultsInfoResponse" />
        </operation>
        
    </portType>

	<binding name="ilsp_nlpPortBinding" type="tns:ilsp_nlp">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
		<operation name="run">
			<soap:operation soapAction="run" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
		<operation name="runAndWaitFor">
		    <soap:operation soapAction="runAndWaitFor" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
		<operation name="getStatus">
			<soap:operation soapAction="getStatus" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
        <operation name="terminate">
            <soap:operation soapAction="terminate" />
            <input>
                <soap:body use="literal" />
            </input>
        </operation>
        <operation name="clear">
            <soap:operation soapAction="clear" />
            <input>
                <soap:body use="literal" />
            </input>
        </operation>
        <operation name="waitfor">
            <soap:operation soapAction="waitfor" />
            <input>
                <soap:body use="literal" />
            </input>
        </operation>
		<operation name="getResults">
		    <soap:operation soapAction="getResults" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
		<operation name="getSomeResults">
		    <soap:operation soapAction="getSomeResults" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
		<operation name="describe">
		    <soap:operation soapAction="describe" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="getLastEvent">
            <soap:operation soapAction="getLastEvent" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="getResultsInfo">
            <soap:operation soapAction="getResultsInfo" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
	</binding>

	<service name="ilsp_nlpService">
		<port name="ilsp_nlpPort" binding="tns:ilsp_nlpPortBinding">
			<documentation>Uses ILSP NLP tools to process Greek texts.  Input is either plain text or an XCES document with text segmented in paragraphs. The service 
detects paragraph sentence and token boundaries and generates POS and lemma annotations for each token. The output by default is an XCES document. Standoff alternatives include UIMA and GATE files. For more documentation and ways to cite this work please visit http://goo.gl/1voev1 .</documentation>
			<soap:address location="http://nlp.ilsp.gr:80/soaplab2-axis/typed/services/getstarted.ilsp_nlp" />
		</port>
	</service>
</definitions>